# Generated by Django 3.2.1 on 2021-08-11 16:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcitivityIntermediateExchange',
            fields=[
                ('variable_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('input_group', models.CharField(blank=True, max_length=10, null=True)),
                ('output_group', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'acitivity_intermediate_exchange',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('allocation_comment', models.CharField(blank=True, max_length=32000, null=True)),
                ('general_comment', models.CharField(blank=True, max_length=32000, null=True)),
                ('comment_technology', models.CharField(blank=True, max_length=32000, null=True)),
                ('included_processes', models.CharField(blank=True, max_length=32000, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_data_valid_for_entire_period', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityIndex',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('start_date', models.CharField(blank=True, max_length=1000, null=True)),
                ('end_date', models.CharField(blank=True, max_length=1000, null=True)),
                ('special_activity_type', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'activity_index',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityName',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('activity_name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'activity_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('website', models.CharField(blank=True, max_length=1000, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DataGeneratorAndPublication',
            fields=[
                ('is_copyright_protected', models.BooleanField(blank=True, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'data_generator_and_publication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('un_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('un_region_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('un_subregion_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('short_name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'geography',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IntermediateExchange',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'intermediate_exchange',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
                ('telephone', models.CharField(blank=True, max_length=1000, null=True)),
                ('telefax', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('default_variable_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('volume_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('first_author', models.CharField(blank=True, max_length=1000, null=True)),
                ('additional_authors', models.CharField(blank=True, max_length=1000, null=True)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('names_of_editors', models.CharField(blank=True, max_length=1000, null=True)),
                ('page_numbers', models.CharField(blank=True, max_length=1000, null=True)),
                ('journal', models.CharField(blank=True, max_length=1000, null=True)),
                ('title_of_anthology', models.CharField(blank=True, max_length=1000, null=True)),
                ('place_of_publications', models.CharField(blank=True, max_length=1000, null=True)),
                ('publisher', models.CharField(blank=True, max_length=1000, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('year', models.CharField(blank=True, max_length=1000, null=True)),
                ('short_name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('synonym', models.CharField(blank=True, max_length=1000, null=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'synonym',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemModel',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('short_name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'system_model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'unit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(max_length=1000, unique=True)),
            ],
            options={
                'db_table': 'version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VersionNameIndex',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'version_name_index',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityPerson',
            fields=[
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='IntiApp.person')),
            ],
            options={
                'db_table': 'activity_person',
                'managed': False,
            },
        ),
    ]
